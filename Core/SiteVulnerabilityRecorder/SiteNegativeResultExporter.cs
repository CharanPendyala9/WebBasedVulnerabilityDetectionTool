using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MySql.Data;
using MySql.Data.MySqlClient;
using MySql.Web;
using System.Configuration;
using ScriptInjectionAndDetectionTool.Core.ModelClasses;
using System.Windows.Forms;

namespace ScriptInjectionAndDetectionTool.SiteVulnerabilityRecorder
{
    public class SiteNegativeResultExporter
    {
        public string ConnectionString;
        public string VulnerableSitesRecordedFilePath;

        public string GetConnectionString()
        {
            return GetSetting("ScriptInjection.DbConnection").ToString();
        }

        /// <summary>
        /// Gets the setting my the <paramref name="name"/>.
        /// </summary>
        /// <param name="name">The name of the setting.</param>
        /// <returns>The setting my the <paramref name="name"/>.</returns>
        private static ConnectionStringSettings GetSetting(string name)
        {
            if (name == null)
                throw new ArgumentNullException("name");

            return ConfigurationManager.ConnectionStrings[name];
        }

        public void RecordVulnerability(VulnerabilityRecord Record)
        {
            ConnectionString = GetConnectionString();
            MySqlConnection con = new MySqlConnection(ConnectionString);
            MySqlCommand cmd;
            
            try
            {
                con.Open();
                cmd = con.CreateCommand();
                cmd.CommandText = "INSERT INTO Vulnerabilities(URL,InputSelector,SubmitSelector,InputSelectorType,SubmitSelectorType),VALUES(@URL,@InputSelector,@SubmitSelector,@InputSelectorType,@SubmitSelectorType)";
                cmd.Parameters.AddWithValue("@URL", Record.URL);
                cmd.Parameters.AddWithValue("@InputSelector", Record.InputSelector.SelectorValue);
                cmd.Parameters.AddWithValue("@SubmitSelector", Record.SubmitSelector.SelectorValue);
                cmd.Parameters.AddWithValue("@InputSelectorType", Record.InputSelector.SelectorType);
                cmd.Parameters.AddWithValue("@SubmitSelectorType", Record.SubmitSelector.SelectorType);
                cmd.ExecuteNonQuery();
            }
            catch(MySqlException ex)
            {
                switch (ex.Number)
                {
                    case 0:
                        MessageBox.Show("Cannot connect to server.  Contact administrator");
                        break;
                    case 1045:
                        MessageBox.Show("Invalid username/password, please try again");
                        break;
                }
            }
            finally
            {
                if(con.State == System.Data.ConnectionState.Open)
                {
                    con.Close();
                }
            }
        }
    }
}
