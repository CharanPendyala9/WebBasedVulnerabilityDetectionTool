using OpenQA.Selenium;
using OpenQA.Selenium.Support.PageObjects;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ScriptInjectionAndDetectionTool.Core.Test_Executor.Context;
using System.Windows.Forms;
using ScriptInjectionAndDetectionTool.Core.ModelClasses;

namespace ScriptInjectionAndDetectionTool.Core.Test_Executor
{
    public class WebPage
    {
        /// <summary>
        /// The web driver.
        /// </summary>
        protected readonly IWebDriver WebDriver;

        /// <summary>
        /// Initializes a new instance of the <see cref="DashboardPage"/> class.
        /// </summary>
        /// <param name="webDriver">The web driver.</param>
        public WebPage(IWebDriver webDriver)
        {
            this.WebDriver = webDriver;

            string title = WebDriver.Title;
            string url = webDriver.Url;

            if (!url.Contains(Helper.TestUrl))
            {
                throw new InvalidOperationException(
                    string.Format("This is not the specified Page {0}.\n It may be redirected to other page. Current page is: {1} URL: {2}", Helper.TestUrl.ToString(), title, url));
            }

            PageFactory.InitElements(webDriver, this);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WebDriver"/> class.
        /// </summary>
        /// <param name="SelectorType">The Selector Type.</param>
        /// <param name="SelectorValue">The Selector Value.</param>
        public WebPage InjectScript(Selector s, string script)
        {
            if (s.SelectorType == "Id")
                WebDriver.FindElement(By.Id(s.SelectorValue)).SendKeys(script);
            else if (s.SelectorType == "CssSelector")
                WebDriver.FindElement(By.CssSelector(s.SelectorValue)).SendKeys(script);
            else if (s.SelectorType == "Xpath")
                WebDriver.FindElement(By.XPath(s.SelectorValue)).SendKeys(script);
            else
                MessageBox.Show("Unexpected Error has occurred. Please start again");

            return new WebPage(WebDriver);
        }

        public WebPage SubmitScript(Selector s)
        {
            if (s.SelectorType == "Id")
                WebDriver.FindElement(By.Id(s.SelectorValue)).Click();
            else if (s.SelectorType == "CssSelector")
                WebDriver.FindElement(By.CssSelector(s.SelectorValue)).Click();
            else if (s.SelectorType == "Xpath")
                WebDriver.FindElement(By.XPath(s.SelectorValue)).Click();
            else
                MessageBox.Show("Unexpected Error has occurred. Please start again");

            return new WebPage(WebDriver);
        }
    }
}
